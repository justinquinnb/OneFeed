package com.justinquinnb.onefeed.customization.textstyle;

import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.Set;

/**
 * A {@link Set} of {@link FormatIndexingRule}s in the desire order of application to a marked-up {@code String}.
 * @param <T> the language that the {@link TextFormatting} contained in the {@link FormattingMarkedText} generated by
 *           one of {@code this} ruleset's {@code FormatIndexingRule}s
 */
public class FormatIndexingRuleset<T extends TextFormatting> implements Iterable<FormatIndexingRule<T>> {
    /**
     * The name of {@code this} {@link FormatIndexingRuleset}.
     */
    private String name;

    /**
     * The {@link Set} of {@link FormatIndexingRule}s to apply on some marked-up text in the order that they appear in
     * the {@code Set}.
     */
    private LinkedHashSet<FormatIndexingRule<T>> rules;

    /**
     * Constructs a {@link FormatIndexingRuleset} with the provided {@code name} and {@link #rules}, {@code rules}.
     *
     * @param name the name of the {@code FormatIndexingRuleset} to create
     * @param rules the {@link FormatIndexingRule}s to include in {@code this} {@code FormatIndexingRuleset}
     */
    public FormatIndexingRuleset(String name, LinkedHashSet<FormatIndexingRule<T>> rules) {
        this.name = name;
        this.rules = rules;
    }

    /**
     * Gets the name of {@code this} {@link FormatIndexingRuleset}.
     *
     * @return {@code this} {@code FormatIndexingRuleset}'s name
     */
    public String getName() {
        return name;
    }

    /**
     * Gets {@code this} {@link FormatIndexingRuleset}'s {@link #rules}.
     *
     * @return a deep copy of {@code this} {@code FormatIndexingRuleset}'s {@code #rules}
     */
    public LinkedHashSet<FormatIndexingRule<T>> getRules() {
        return new LinkedHashSet<>(rules); // TODO make this actually a deep copy
    }

    /**
     * Provides an iterator for {@code this} {@link FormatIndexingRuleset}s {@link #rules}.
     *
     * @return an iterator for {@code this} {@code FormatIndexingRuleset}s {@link #rules}
     */
    @Override
    public Iterator<FormatIndexingRule<T>> iterator() {
        return this.rules.iterator();
    }
}